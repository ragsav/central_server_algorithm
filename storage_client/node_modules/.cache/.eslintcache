[{"E:\\projects\\DS\\storage_client\\src\\index.js":"1","E:\\projects\\DS\\storage_client\\src\\App.js":"2","E:\\projects\\DS\\storage_client\\src\\reportWebVitals.js":"3","E:\\projects\\DS\\storage_client\\src\\storage.js":"4","E:\\projects\\DS\\storage_client\\src\\resource.js":"5"},{"size":636,"mtime":1617644389146,"results":"6","hashOfConfig":"7"},{"size":372,"mtime":1617865571258,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":9512,"mtime":1617891025752,"results":"10","hashOfConfig":"7"},{"size":15510,"mtime":1617864899668,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"n80e8r",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"E:\\projects\\DS\\storage_client\\src\\index.js",[],["25","26"],"E:\\projects\\DS\\storage_client\\src\\App.js",["27","28"],"import logo from './logo.svg';\nimport './App.css';\nimport Storage from \"./storage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Resource from \"./resource\";\n\nfunction App() {\n  return <Storage></Storage>; //comment this if we want to use storage question\n  // return <Resource></Resource>;//comment this if we want to use resource question\n}\n\nexport default App;\n","E:\\projects\\DS\\storage_client\\src\\reportWebVitals.js",[],"E:\\projects\\DS\\storage_client\\src\\storage.js",["29","30","31","32","33","34","35"],"E:\\projects\\DS\\storage_client\\src\\resource.js",["36","37","38","39","40"],"import { io } from \"socket.io-client\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Card, Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:5000\";\r\n\r\nconst Resource = (props) => {\r\n  const socket = useRef(null);\r\n  const [id, setId] = useState(2);\r\n  const [serverId, setServerId] = useState(null);\r\n  const [resourceState, setResourceState] = useState(null);\r\n  const [allocationRequest, setAllocationRequest] = useState(null);\r\n  const [requestQueue, setRequestQueue] = useState(null);\r\n  const [releaseRequest, setReleaseRequest] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(ENDPOINT, { autoConnect: false });\r\n    socket.current.onAny((event, ...args) => {\r\n      if (event === \"request_queue\") {\r\n      }\r\n    });\r\n    // socket.current.auth = { id };\r\n    socket.current.connect();\r\n    // console.log(socket.current);\r\n    socket.current.on(\"connection\", () => {});\r\n    socket.current.on(\"resource_state\", (data) => {\r\n      setResourceState(data);\r\n      const allocationRequest_temp = {};\r\n      const releaseRequest_temp = {};\r\n      const resource_state_temp = {};\r\n      Object.keys(data).map((key) => {\r\n        allocationRequest_temp[key] = 0;\r\n        resource_state_temp[key] = data[key];\r\n        releaseRequest_temp[key] = 0;\r\n      });\r\n      setAllocationRequest({ ...allocationRequest_temp });\r\n      setReleaseRequest({ ...releaseRequest_temp });\r\n      setResourceState({ ...resource_state_temp });\r\n    });\r\n    socket.current.on(\"request_queue\", (queue) => {\r\n      setRequestQueue(queue);\r\n    });\r\n    socket.current.on(\"error\", (msg) => {\r\n      toast.error(msg, {\r\n        position: \"bottom-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n      });\r\n    });\r\n    socket.current.on(\"warning\", (msg) => {\r\n      toast.warning(msg, {\r\n        position: \"bottom-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n      });\r\n    });\r\n    socket.current.on(\"success\", (msg) => {\r\n      toast.success(msg, {\r\n        position: \"bottom-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n      });\r\n    });\r\n  }, [id]);\r\n\r\n  function handleAddAllocatedResource(e, resource) {\r\n    const allocationRequest_temp = allocationRequest;\r\n    allocationRequest_temp[resource] = allocationRequest[resource] + 1;\r\n    setAllocationRequest({ ...allocationRequest_temp });\r\n  }\r\n  function handleDeleteAllocatedResource(e, resource) {\r\n    const allocationRequest_temp = allocationRequest;\r\n    allocationRequest_temp[resource] =\r\n      allocationRequest[resource] !== 0 ? allocationRequest[resource] - 1 : 0;\r\n    setAllocationRequest({ ...allocationRequest_temp });\r\n  }\r\n\r\n  function handleAddReleaseResource(e, resource) {\r\n    const releaseRequest_temp = releaseRequest;\r\n    releaseRequest_temp[resource] = releaseRequest[resource] + 1;\r\n    setReleaseRequest({ ...releaseRequest_temp });\r\n  }\r\n  function handleDeleteReleaseResource(e, resource) {\r\n    const releaseRequest_temp = releaseRequest;\r\n    releaseRequest_temp[resource] =\r\n      releaseRequest[resource] !== 0 ? releaseRequest[resource] - 1 : 0;\r\n    setReleaseRequest({ ...releaseRequest_temp });\r\n  }\r\n\r\n  function handleRelease(e) {\r\n    socket.current.emit(\"release\", releaseRequest);\r\n  }\r\n  function handleAllocate(e) {\r\n    socket.current.emit(\"allocate\", allocationRequest);\r\n  }\r\n  return (\r\n    <Container\r\n      style={{\r\n        margin: \"auto\",\r\n\r\n        maxWidth: \"100%\",\r\n        padding: 8,\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n      }}\r\n    >\r\n      {socket?.current ? (\r\n        <Row\r\n          style={{\r\n            margin: 8,\r\n            color: \"white\",\r\n            padding: \"4px 16px 4px 16px\",\r\n            backgroundColor: \"#474747\",\r\n            borderRadius: 4,\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          {`Client id : ${socket.current.id}`}\r\n        </Row>\r\n      ) : null}\r\n\r\n      <Card style={{ margin: 8, padding: 4 }}>\r\n        <Row\r\n          style={{\r\n            margin: 4,\r\n            color: \"white\",\r\n            padding: \"4px 16px 4px 16px\",\r\n            backgroundColor: \"#791D1D\",\r\n            borderRadius: 4,\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          Request queue\r\n        </Row>\r\n        {requestQueue\r\n          ? requestQueue.map((data) => {\r\n              return (\r\n                <Row\r\n                  style={{\r\n                    margin: 4,\r\n                    color: \"white\",\r\n                    padding: \"4px 16px 4px 16px\",\r\n                    backgroundColor: \"#471D79\",\r\n                    borderRadius: 4,\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  {data}\r\n                </Row>\r\n              );\r\n            })\r\n          : null}\r\n      </Card>\r\n\r\n      {resourceState != null\r\n        ? Object.keys(resourceState).map((resource, status) => {\r\n            return (\r\n              <Card\r\n                style={{\r\n                  margin: 6,\r\n                  color: \"#5A5A5A\",\r\n                  padding: 0,\r\n                  backgroundColor: \"#FFFFFF\",\r\n                  border: \"none\",\r\n                }}\r\n              >\r\n                <Row\r\n                  style={{\r\n                    padding: 0,\r\n                    margin: 2,\r\n                    color: \"white\",\r\n                    fontSize: 12,\r\n                    backgroundColor: \"#FFFFFF\",\r\n\r\n                    borderRadius: 4,\r\n                  }}\r\n                >\r\n                  <Col\r\n                    sm={{ span: 1 }}\r\n                    style={{\r\n                      padding: \"2px 4px 2px 4px\",\r\n                      backgroundColor: \"#40BB35\",\r\n                      borderBottomLeftRadius: 4,\r\n                      borderTopLeftRadius: 4,\r\n                    }}\r\n                  >\r\n                    {resource}\r\n                  </Col>\r\n                  <Col\r\n                    sm={{ span: 11 }}\r\n                    style={{\r\n                      padding: \"2px 4px 2px 4px\",\r\n                      borderTopRightRadius: 4,\r\n                      borderBottomRightRadius: 4,\r\n                      backgroundColor: \"#2C2C2C\",\r\n                    }}\r\n                  >\r\n                    <Row\r\n                      style={{\r\n                        padding: \"2px 4px 2px 4px\",\r\n                        margin: 2,\r\n                        backgroundColor: \"#2C2C2C\",\r\n                      }}\r\n                    >\r\n                      {Object.keys(resourceState[resource]).map((id) => {\r\n                        return (\r\n                          <Col\r\n                            style={{\r\n                              padding: \"2px 4px 2px 4px\",\r\n                              margin: 2,\r\n                              backgroundColor: \"#2C2C2C\",\r\n                            }}\r\n                          >{`${id} : ${resourceState[resource][id]}`}</Col>\r\n                        );\r\n                      })}\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            );\r\n          })\r\n        : null}\r\n\r\n      <Row\r\n        style={{\r\n          margin: 0,\r\n          padding: 8,\r\n          width: \"100%\",\r\n\r\n          backgroundColor: \"white\",\r\n          borderRadius: 4,\r\n        }}\r\n      >\r\n        <Row\r\n          style={{\r\n            padding: 4,\r\n            margin: 0,\r\n            backgroundColor: \"#2C2C2C\",\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            fontSize: 14,\r\n            borderRadius: 4,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Col style={{ margin: 0, padding: 4, textAlign: \"left\" }}>\r\n            Release request\r\n          </Col>\r\n\r\n          <Col style={{ margin: 0, padding: 4 }}>\r\n            <Row style={{ margin: 0, padding: 4 }}>\r\n              {releaseRequest\r\n                ? Object.keys(releaseRequest).map((key) => {\r\n                    return (\r\n                      <Col\r\n                        style={{\r\n                          margin: 0,\r\n                          padding: \"0px 4px 0px 4px\",\r\n                          textAlign: \"left\",\r\n                          color: \"#90E62E\",\r\n                        }}\r\n                      >{`${key} : ${releaseRequest[key]}`}</Col>\r\n                    );\r\n                  })\r\n                : null}\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              margin: 0,\r\n              padding: 4,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"outline-warning\"\r\n              style={{\r\n                padding: \"2px 4px 2px 4px\",\r\n                fontSize: 12,\r\n                margin: \"2px 4px 2px 4px\",\r\n              }}\r\n              onClick={(e) => {\r\n                handleRelease(e);\r\n              }}\r\n            >\r\n              Release\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n\r\n      <Row\r\n        style={{\r\n          margin: 0,\r\n          padding: 8,\r\n          width: \"100%\",\r\n\r\n          backgroundColor: \"white\",\r\n          borderRadius: 4,\r\n        }}\r\n      >\r\n        <Row\r\n          style={{\r\n            padding: 4,\r\n            margin: 0,\r\n            backgroundColor: \"#2C2C2C\",\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            fontSize: 14,\r\n            borderRadius: 4,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Col style={{ margin: 0, padding: 4, textAlign: \"left\" }}>\r\n            Allocation request\r\n          </Col>\r\n\r\n          <Col style={{ margin: 0, padding: 4 }}>\r\n            <Row style={{ margin: 0, padding: 4 }}>\r\n              {allocationRequest\r\n                ? Object.keys(allocationRequest).map((key) => {\r\n                    return (\r\n                      <Col\r\n                        style={{\r\n                          margin: 0,\r\n                          padding: \"0px 4px 0px 4px\",\r\n                          textAlign: \"left\",\r\n                          color: \"#90E62E\",\r\n                        }}\r\n                      >{`${key} : ${allocationRequest[key]}`}</Col>\r\n                    );\r\n                  })\r\n                : null}\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              margin: 0,\r\n              padding: 4,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"outline-success\"\r\n              style={{\r\n                padding: \"2px 4px 2px 4px\",\r\n                fontSize: 12,\r\n                margin: \"2px 4px 2px 4px\",\r\n              }}\r\n              onClick={(e) => {\r\n                handleAllocate(e);\r\n              }}\r\n            >\r\n              Allocate\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n\r\n      <Row\r\n        style={{\r\n          margin: 0,\r\n          padding: 4,\r\n          width: \"100%\",\r\n          height: 200,\r\n          backgroundColor: \"white\",\r\n          borderRadius: 4,\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            padding: 4,\r\n            margin: 4,\r\n            backgroundColor: \"#2C2C2C\",\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            fontSize: 14,\r\n            borderRadius: 4,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {resourceState && allocationRequest && releaseRequest\r\n            ? Object.keys(resourceState).map((resource, status) => {\r\n                return (\r\n                  <Row style={{ padding: 4, margin: 0 }}>\r\n                    <Col style={{ padding: 2, margin: 0 }}>{resource}</Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      Allocation amount\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        style={{\r\n                          padding: \"2px 4px 2px 4px\",\r\n                          fontSize: 12,\r\n                          margin: \"2px 4px 2px 4px\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                          handleAddAllocatedResource(e, resource);\r\n                        }}\r\n                      >\r\n                        Increment\r\n                      </Button>\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      {allocationRequest[resource]}\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        style={{\r\n                          padding: \"2px 4px 2px 4px\",\r\n                          margin: \"2px 4px 2px 4px\",\r\n                          fontSize: 12,\r\n                        }}\r\n                        onClick={(e) => {\r\n                          handleDeleteAllocatedResource(e, resource);\r\n                        }}\r\n                      >\r\n                        Decrement\r\n                      </Button>\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      Release amount\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        style={{\r\n                          padding: \"2px 4px 2px 4px\",\r\n                          fontSize: 12,\r\n                          margin: \"2px 4px 2px 4px\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                          handleAddReleaseResource(e, resource);\r\n                        }}\r\n                      >\r\n                        Increment\r\n                      </Button>\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      {releaseRequest[resource]}\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        style={{\r\n                          padding: \"2px 4px 2px 4px\",\r\n                          fontSize: 12,\r\n                          margin: \"2px 4px 2px 4px\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                          handleDeleteReleaseResource(e, resource);\r\n                        }}\r\n                      >\r\n                        Decrement\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                );\r\n              })\r\n            : null}\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Resource;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":16},{"ruleId":"45","severity":1,"message":"50","line":10,"column":3,"nodeType":"47","messageId":"48","endLine":10,"endColumn":13},{"ruleId":"45","severity":1,"message":"51","line":11,"column":3,"nodeType":"47","messageId":"48","endLine":11,"endColumn":14},{"ruleId":"45","severity":1,"message":"52","line":14,"column":8,"nodeType":"47","messageId":"48","endLine":14,"endColumn":19},{"ruleId":"45","severity":1,"message":"53","line":20,"column":14,"nodeType":"47","messageId":"48","endLine":20,"endColumn":19},{"ruleId":"45","severity":1,"message":"54","line":21,"column":10,"nodeType":"47","messageId":"48","endLine":21,"endColumn":18},{"ruleId":"45","severity":1,"message":"55","line":21,"column":20,"nodeType":"47","messageId":"48","endLine":21,"endColumn":31},{"ruleId":"45","severity":1,"message":"56","line":62,"column":12,"nodeType":"47","messageId":"48","endLine":62,"endColumn":20},{"ruleId":"45","severity":1,"message":"52","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":19},{"ruleId":"45","severity":1,"message":"53","line":11,"column":14,"nodeType":"47","messageId":"48","endLine":11,"endColumn":19},{"ruleId":"45","severity":1,"message":"54","line":12,"column":10,"nodeType":"47","messageId":"48","endLine":12,"endColumn":18},{"ruleId":"45","severity":1,"message":"55","line":12,"column":20,"nodeType":"47","messageId":"48","endLine":12,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":33,"column":35,"nodeType":"59","messageId":"60","endLine":33,"endColumn":37},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Resource' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ModalHeader' is defined but never used.","'setId' is assigned a value but never used.","'serverId' is assigned a value but never used.","'setServerId' is assigned a value but never used.","'handleId' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]