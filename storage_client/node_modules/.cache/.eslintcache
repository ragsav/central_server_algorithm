[{"E:\\projects\\DS\\storage_client\\src\\index.js":"1","E:\\projects\\DS\\storage_client\\src\\App.js":"2","E:\\projects\\DS\\storage_client\\src\\reportWebVitals.js":"3","E:\\projects\\DS\\storage_client\\src\\storage.js":"4","E:\\projects\\DS\\storage_client\\src\\resource.js":"5"},{"size":636,"mtime":1617644389146,"results":"6","hashOfConfig":"7"},{"size":372,"mtime":1617865571258,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":7008,"mtime":1617697610971,"results":"10","hashOfConfig":"7"},{"size":15510,"mtime":1617864899668,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"n80e8r",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\projects\\DS\\storage_client\\src\\index.js",[],["24","25"],"E:\\projects\\DS\\storage_client\\src\\App.js",["26","27"],"E:\\projects\\DS\\storage_client\\src\\reportWebVitals.js",[],"E:\\projects\\DS\\storage_client\\src\\storage.js",["28","29","30","31","32","33","34"],"import { io } from \"socket.io-client\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:5000\";\r\n\r\nconst Storage = (props) => {\r\n  const socket = useRef(null);\r\n  const [id, setId] = useState(null);\r\n  const [serverId, setServerId] = useState(null);\r\n  const [storageState, setStorageState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(ENDPOINT, { autoConnect: false });\r\n    socket.current.onAny((event, ...args) => {\r\n      console.log(event, args);\r\n    });\r\n    // socket.current.auth = { id };\r\n    socket.current.connect();\r\n    // console.log(socket.current);\r\n    socket.current.on(\"connection\", () => {});\r\n    socket.current.on(\"storage_state\", (data) => {\r\n      setStorageState(data);\r\n    });\r\n    socket.current.on(\"notification\", (not) => {\r\n      not.status === \"success\"\r\n        ? toast.success(not.msg, {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          })\r\n        : toast.error(not.msg, {\r\n            position: \"bottom-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n    });\r\n  }, []);\r\n\r\n  function handleId(e) {\r\n    e.preventDefault();\r\n    if (id !== null) {\r\n    }\r\n  }\r\n  function handleWrite(e, storage) {\r\n    socket.current.emit(\"write\", { storage });\r\n  }\r\n  function handleRead(e, storage) {\r\n    socket.current.emit(\"read\", { storage });\r\n  }\r\n  function handleRelease(e, storage) {\r\n    socket.current.emit(\"release\", { storage });\r\n  }\r\n  return (\r\n    <Container\r\n      style={{\r\n        margin: \"auto\",\r\n        maxWidth: 400,\r\n        padding: 8,\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n      }}\r\n    >\r\n      {socket?.current ? (\r\n        <Row\r\n          style={{\r\n            margin: 8,\r\n            color: \"white\",\r\n            padding: \"4px 16px 4px 16px\",\r\n            backgroundColor: \"#474747\",\r\n            borderRadius: 4,\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          {`Client id : ${socket.current.id}`}\r\n        </Row>\r\n      ) : null}\r\n\r\n      {storageState != null\r\n        ? Object.keys(storageState).map((storage, status) => {\r\n            return (\r\n              <Card\r\n                style={{\r\n                  margin: 8,\r\n                  color: \"#5A5A5A\",\r\n                  padding: 4,\r\n                  backgroundColor: \"#FFFFFF\",\r\n                  border: \"1px solid #5a5a5a\",\r\n                  borderRadius: 4,\r\n                }}\r\n              >\r\n                <Row\r\n                  style={{\r\n                    padding: \"4px 8px 4px 8px\",\r\n                    margin: 2,\r\n                    color: \"white\",\r\n                    fontSize: 12,\r\n                    backgroundColor: \"#135313\",\r\n                    border: \"1px solid #135313\",\r\n                    borderRadius: 4,\r\n                  }}\r\n                >{`${storage} : Written by ${storageState[storage].write}`}</Row>\r\n                {storageState[storage].read.map((val) => {\r\n                  return (\r\n                    <Row\r\n                      style={{\r\n                        padding: \"4px 8px 4px 8px\",\r\n                        margin: 2,\r\n                        color: \"white\",\r\n                        fontSize: 12,\r\n                        backgroundColor: \"#581e73\",\r\n                        border: \"1px solid #581E73\",\r\n                        borderRadius: 4,\r\n                      }}\r\n                    >{`${storage} : Read by ${val}`}</Row>\r\n                  );\r\n                })}\r\n              </Card>\r\n            );\r\n          })\r\n        : null}\r\n\r\n      <Row\r\n        style={{\r\n          margin: 0,\r\n          padding: 4,\r\n          width: \"100%\",\r\n          height: 200,\r\n          backgroundColor: \"white\",\r\n          borderRadius: 4,\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            padding: 4,\r\n            margin: 4,\r\n            backgroundColor: \"#2C2C2C\",\r\n            color: \"white\",\r\n            fontWeight: \"500\",\r\n            fontSize: 14,\r\n            borderRadius: 4,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {storageState != null\r\n            ? Object.keys(storageState).map((storage, status) => {\r\n                return (\r\n                  <Row style={{ padding: 4, margin: 0 }}>\r\n                    <Col style={{ padding: 2, margin: 0 }}>{storage}</Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          padding: \"2px 4px 2px 4px\",\r\n                          fontSize: 12,\r\n                          margin: \"2px 4px 2px 4px\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                          handleWrite(e, storage);\r\n                        }}\r\n                      >\r\n                        Write\r\n                      </Button>\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          padding: \"2px 4px 2px 4px\",\r\n                          margin: \"2px 4px 2px 4px\",\r\n                          fontSize: 12,\r\n                        }}\r\n                        onClick={(e) => {\r\n                          handleRead(e, storage);\r\n                        }}\r\n                      >\r\n                        Read\r\n                      </Button>\r\n                    </Col>\r\n                    <Col style={{ padding: \"2px 8px 2px 8px\", margin: 0 }}>\r\n                      <Button\r\n                        variant=\"outline-warning\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          padding: \"2px 4px 2px 4px\",\r\n                          margin: \"2px 4px 2px 4px\",\r\n                          fontSize: 12,\r\n                        }}\r\n                        onClick={(e) => {\r\n                          handleRelease(e, storage);\r\n                        }}\r\n                      >\r\n                        Release\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                );\r\n              })\r\n            : null}\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Storage;\r\n","E:\\projects\\DS\\storage_client\\src\\resource.js",["35","36","37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":16},{"ruleId":"44","severity":1,"message":"49","line":10,"column":3,"nodeType":"46","messageId":"47","endLine":10,"endColumn":13},{"ruleId":"44","severity":1,"message":"50","line":11,"column":3,"nodeType":"46","messageId":"47","endLine":11,"endColumn":14},{"ruleId":"44","severity":1,"message":"51","line":13,"column":8,"nodeType":"46","messageId":"47","endLine":13,"endColumn":19},{"ruleId":"44","severity":1,"message":"52","line":19,"column":14,"nodeType":"46","messageId":"47","endLine":19,"endColumn":19},{"ruleId":"44","severity":1,"message":"53","line":20,"column":10,"nodeType":"46","messageId":"47","endLine":20,"endColumn":18},{"ruleId":"44","severity":1,"message":"54","line":20,"column":20,"nodeType":"46","messageId":"47","endLine":20,"endColumn":31},{"ruleId":"44","severity":1,"message":"55","line":58,"column":12,"nodeType":"46","messageId":"47","endLine":58,"endColumn":20},{"ruleId":"44","severity":1,"message":"51","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":19},{"ruleId":"44","severity":1,"message":"52","line":11,"column":14,"nodeType":"46","messageId":"47","endLine":11,"endColumn":19},{"ruleId":"44","severity":1,"message":"53","line":12,"column":10,"nodeType":"46","messageId":"47","endLine":12,"endColumn":18},{"ruleId":"44","severity":1,"message":"54","line":12,"column":20,"nodeType":"46","messageId":"47","endLine":12,"endColumn":31},{"ruleId":"56","severity":1,"message":"57","line":33,"column":35,"nodeType":"58","messageId":"59","endLine":33,"endColumn":37},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Resource' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'ModalHeader' is defined but never used.","'setId' is assigned a value but never used.","'serverId' is assigned a value but never used.","'setServerId' is assigned a value but never used.","'handleId' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]